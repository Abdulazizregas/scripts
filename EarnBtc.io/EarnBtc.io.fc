

//==================//
//script Written by: ••AviramDayan•• 26/06/2019 00:30PM - Version 1
//Last Update: 14/03/2020 19:10PM - Version 7
//==================//
using FaucetCollector.Script;
using System;
using System.Linq;
//css_ref FaucetCollector.Utilities
//css_ref FaucetCollector.Captcha


public class EarnBtc : FaucetScript
{
    /// <summary>
    /// List of Settings that will be shown in the bot when selecting this Faucet in the bot.
    /// You can get the value the user entered with the methods: GetSetting("[Name of the FaucetSetting]"), GetBoolSetting and GetDateTimeSetting
    /// You can also create a new setting value using SetSetting("[Name you want to use]", "value")
    /// </summary>
    public override FaucetSettings Settings
    {
        get
        {

            return new FaucetSettings("https://earnbtc.io/user/dashboard.page")
            {
                new FaucetSetting(){Name="Email",Display="Email",Type=EditorType.TextBox,Required=false},
                new FaucetSetting(){Name="Password",Display="Password",Type=EditorType.Password,Required=false},
                new FaucetSetting() { Name = "FramedAds", Display = "FramedAds - ON/OFF", Type = EditorType.CheckBox, Default = true},
                new FaucetSetting() { Name = "Choose_Captcha", Display = "Choose_Captcha - ON/OFF - ON Recaptcha - Off SolveMedia", Type = EditorType.CheckBox, Default = false},

            };
        }
    }



    //============================================================//
    //the number of "successes" in the script - when are finished  
    //============================================================//
    public override void Start( )
    {

        Title="Earn B";

        SuccessXPath="//div[@class='alert alert-success mt-3']//strong";
        FailXPath="//div[@class='alert']"; //*[@id='']


        base.Start( );
    }
    //============================================================//
    //the number of "successes" in the script - when are finished  
    //============================================================//





    public void CheckDashboardAd( )
    {

        var Adbtn=ElementByXPath("//button[@id='opener']");
        if ( IsVisible(Adbtn) )
        {
            try
            {

                CheckForPopupsEnabled=false;
                Click(Adbtn , false);
                Wait(1);
                Driver.SwitchTo( ).Window(Driver.WindowHandles[0]);
                var timer=ElementByXPath("//div[@id='_time']");
                DateTime timeout=DateTime.Now.AddSeconds(30);
                while ( IsVisible(timer)&&DateTime.Now<timeout )
                {
                    Wait( );
                    timer=ElementByXPath("//div[@id='_time']");
                }


            }
            finally
            {
                CheckForPopupsEnabled=true;
                CheckForPopups( );

            }
        }
    }


    public override bool IsLoggedIn( )
    {
        return ElementByXPath("//a[contains(@href,'logout')]")!=null;

    }


    //=============//
    //BeforeLogin
    //=============//
    public override int BeforeLogin( )
    {


        GoToUrl("https://earnbtc.io/user/dashboard.page");


        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.BeforeLogin( );
    }
    //=============//
    //BeforeLogin
    //=============//





    //========//
    //DoLogin
    //========//
    public override int DoLogin( )
    {

        GoToUrl("https://earnbtc.io/login.page");

        Wait(2);

        var box_user = ElementByXPath("//input[@name='email']");
        if ( !IsVisible(box_user) )
        {
            return Fail("username box not found or not visible");
        }
        SetText(box_user , GetSetting("Email"));



        var box_pass = ElementByXPath("//input[@name='password']");
        if ( !IsVisible(box_pass) )
        {
            return Fail("password box not found or not visible");
        }
        SetText(box_pass , GetPassword("Password"));


        var result=DoSolveCaptcha();
        if ( result>0 )
        {
            return result;
        }


        var btnLogin=ElementByXPath("//button[@class='btn btn-primary btn-block']");
        if ( !IsVisible(btnLogin) )
        {
            return Fail("Btn login not visible or not found");
        }

        Click(btnLogin);
        Wait(2);


        GoToUrl("https://earnbtc.io/user/dashboard.page");


        Wait(2);

    

        return base.DoLogin( );
    }
    //========//
    //DoLogin
    //========//



    //================//
    //GetFaucetWaitTime
    //================//
    public override int GetFaucetWaitTime( )
    {

        var minutes=ElementByXPath("//span[@id='minutes']");
        var seconds=ElementByXPath("//span[@id='seconds']");
        // Timer is visible
        if(IsVisible(minutes) &&IsVisible(seconds) )
        {
            int m,s;

            if(int.TryParse(minutes.Text,out m) && int.TryParse(seconds.Text,out s) )
            {

                return m*60+s; 
            }

        }


        //let Faucet Collector continue.
        return base.GetFaucetWaitTime( );
    }



    public override int DoSolveCaptcha( )
    {
        // We define if we need to use reacaptcha
        bool useRecaptcha=GetBoolSetting("Choose_Captcha");
        // Define correct xpath
        var changeCaptchaXPath=useRecaptcha?"//li[@class='nav-item']//a[contains(text(),'RECAPTCHA')]"
            :"//li[@class='nav-item']//a[contains(text(),'SOLVEMEDIA')]";
        // We try to find the captcha change button
        var ChangeCaptchaBtn=ElementByXPath(changeCaptchaXPath);
        if ( IsVisible(ChangeCaptchaBtn) )
        {
            Click(ChangeCaptchaBtn);
        }

        Wait( );

        // We solve the captcha
        var result=base.DoSolveCaptcha();
        // if something went wrong or we was solving solvemedia we return result
        if ( result>0||!useRecaptcha )
        {
            return result;
        }
        // We call the callback and them  return the result
        var recaptchaBypass=new FaucetCollector.Captcha.RecaptchaUtility(this);

        recaptchaBypass.DoSolve( );

        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return result;
    }



    public override int DoSolveFaucet( )
    {

        if ( GetBoolSetting("FramedAds") )
        {
            GoToUrl("http://earnbtc.io/watch-afa.page");
            Wait(2);
            var Ads=ElementsByXPath("//div[@class='card']//div[@class='card-header'").Where(X=>IsVisible(X)).ToList();
            int N=0;
            while ( Ads.Count>N )
            {
                try
                {
                    CheckForPopupsEnabled=false;
                    Click(Ads[N] , false);
                    Driver.SwitchTo( ).Window(Driver.WindowHandles.LastOrDefault( ));
                    var result=DoSolveCaptcha();
                    if ( result>0 )
                    {
                        continue;
                    }
                    var adBtn=ElementByXPath("//button[@id='openAdvertisement']");
                    if ( !IsVisible(adBtn) )
                    {
                        continue;
                    }
                    Click(adBtn);
                    Wait(2 , 3);

                    var adCredited=ElementByXPath("//div[@id='viewCredited']");
                    DateTime timeout=DateTime.Now.AddSeconds(45);
                    while ( !IsVisible(adCredited) )
                    {
                        Wait(1 , 2);
                        adCredited=ElementByXPath("//div[@id='viewCredited']");
                    }
                    Wait(1);

                }
                finally
                {
                    CheckForPopupsEnabled=true;
                    CheckForPopups( );
                    Driver.SwitchTo( ).Window(Driver.WindowHandles[0]);
                    Wait(1);
                    Ads=ElementsByXPath("//div[@class='card']//div[@class='card-header'");
                }

            }
        }



        GoToUrl("https://earnbtc.io/user/roll-win.page");
        Wait(2);

        var getRewardBtn=ElementByXPath("//button[@class='btn btn-primary']");
        if ( !IsVisible(getRewardBtn) )
        {
            return Fail("getRewardBtn not visible");
        }
        var resultCaptcha=DoSolveCaptcha();
        if ( resultCaptcha>0 )
        {
            return resultCaptcha;
        }

        Click(getRewardBtn);



        Wait(2);

        return base.DoSolveFaucet( );


    }







} //end public class

