using FaucetCollector.Script;
using FaucetCollector.Utilities;

using System.Linq;
//css_ref FaucetCollector.Utilities
//css_ref FaucetCollector.Captcha
public class GoldenFaucetScript : FaucetScript
{

    public override FaucetSettings Settings
    {
        get
        {
            return new FaucetSettings("https://www.goldenfaucet.io")
            {
                new FaucetSetting(){Name="User",Display="Username",Type=EditorType.TextBox,Required=true},
                new FaucetSetting(){Name="Pass",Display="Password",Type=EditorType.Password,Required=true},
                new FaucetSetting(){Name="Sec",Display="Security Question",Type=EditorType.TextBox,Required=false}

            };
        }
    }


    public override void Start()
    {
        Title = "goldenfaucet";

        SuccessXPath = "//a[contains(text(),'Click to earn more')]";
        FailXPath = "//div[@class='l2errorclaim error_box']";




        base.Start();
    }

    public override bool IsLoggedIn()
    {
        return ElementByXPath("//*[@href='index.php?view=logout']") != null;
    }
    public override int DoLogin()
    {

        var gotoLoginBtn = ElementByXPath("//a[contains(text(),'Login')]");
        if (IsVisible(gotoLoginBtn))
        {
            Click(gotoLoginBtn);
        }
        else
        {
            GoToUrl("https://www.goldenfaucet.io/index.php?view=login");
        }
        Wait(1, 2);

        var userBox = ElementByXPath("//input[@name='username']");
        if (!IsVisible(userBox))
        {
            return Fail("User box is not visible or not found");
        }
        SetText(userBox, GetSetting("User"));


        var passwordBox = ElementByXPath("//input[@name='password']");
        if (!IsVisible(passwordBox))
        {
            return Fail("Password box is not visible or not found");
        }

        var result = DoSolveCaptcha();
        if (result>0)
        {
            return result;
        }

        var loginBtn = ElementByXPath("//input[@name='login']");
        if (!IsVisible(loginBtn))
        {
            return Fail("Login button is not visible or not found");
        }

        Click(loginBtn);

        var errorBox = ElementByXPath("//div[contains(@class,'error_box')]");
        if (IsVisible(errorBox))
        {
            Log(errorBox.Text);
        }


        return base.DoLogin();
    }

    public override int AfterSolveFaucet()
    {
        var securityQuestionBox = ElementById("security_answer");
        if (IsVisible(securityQuestionBox))
        {
            SetText(securityQuestionBox, GetSetting("Sec"));
            var submitButton = ElementByXPath("//input[@name='btn']");
            if (IsVisible(submitButton))
            {
                Click(submitButton);
                Wait(2);
            }
        }


        

        return base.AfterSolveFaucet();
    }

    public override int DoSolveCaptcha()
    {

        var imgBox = ElementByXPath("//img[@id='captchaimglogin']");
        var textBox = ElementByXPath("//input[@id='captcha_login']");

        if(IsVisible(imgBox) && IsVisible(textBox))
        {
            return DoSolveImageCaptcha(imgBox, textBox);

        }
        return base.DoSolveCaptcha();
    }

    public override int DoSolveFaucet()
    {
        GoToUrl("https://www.goldenfaucet.io/adlink_shorts.php");
        Wait(1, 2);

        var ads = ElementsByXPath("//div[@class='ad-block']//div[@class='ad-title']//div[contains(@onclick,'window.open')]").Where(b => IsVisible(b)).ToList();
        int nAd = 0;
        while (ads.Count > nAd)
        {
            try
            {
                Click(ads[nAd]);
                Wait(1);
                ShortLinkBypasser shortLinkBypasser = new ShortLinkBypasser(this);
                bool result = shortLinkBypasser.DoShortLink();
                if (!result)
                {
                    nAd++;
                }
                else
                {
                    ClaimSuccess();
                    IsSuccess = true;
                    Log("Claim ad successfully");
                }

            }
            finally
            {
                GoToUrl("https://www.goldenfaucet.io/adlink_shorts.php");
                Wait(1);
                ads = ElementsByXPath("//div[@class='ad-block']//div[@class='ad-title']//div[contains(@onclick,'window.open')]").Where(b => IsVisible(b)).ToList();
            }
        }

        return GetWaitSetting();
    }





}
