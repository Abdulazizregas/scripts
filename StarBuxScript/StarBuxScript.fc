//css_ref FaucetCollector.Utilities
//css_ref FaucetCollector.Captcha
//css_ref FaucetCollector.FaucetTemplates
using FaucetCollector.FaucetTemplates;
using FaucetCollector.Script;

public class StarBuxScript : FaucetScript
{
    /// <summary>
    /// List of Settings that will be shown in the bot when selecting this Faucet in the bot.
    /// You can get the value the user entered with the methods: GetSetting("[Name of the FaucetSetting]"), GetBoolSetting and GetDateTimeSetting
    /// You can also create a new setting value using SetSetting("[Name you want to use]", "value")
    /// </summary>
    public override FaucetSettings Settings
    {
        get
        {
            return new FaucetSettings("https://starbux.io/")
            {
                new FaucetSetting(){Name="User",Display="Username",Type=EditorType.TextBox,Required=true},
                new FaucetSetting(){Name="Pass",Display="Password",Type=EditorType.Password,Required=true},
                new FaucetSetting(){Name="UseSolvemedia",Display="UseSolvemedia",Type=EditorType.CheckBox,Default=true },

              
            };
        }
    }

    /// <summary>
    /// This method gets called when the faucet is enabled and the GO button is clicked
    /// </summary>
    public override void Start()
    {
        //Title that shows in the browser. Is used to identify and close popup windows
        Title = "StarBux|The ultimate";

        //After we did try to claim on the faucet we search for these elements to determine if it was a success or a fail
        SuccessXPath = "//div[@class='alert alert-success']";
        FailXPath = "//div[@class='alert alert-danger']";
        manager = new BfreeSolver(this);
        //Let Faucet Collector start up everything
        base.Start();


    }

    private BfreeSolver manager { get; set; }

    public override bool IsLoggedIn()
    {
        return manager.IsLoggedIn();
    }

    /// <summary>
    /// This method gets called if IsLoggedIn returned false, right before the DoLogin method is called.
    /// </summary>
    public override int BeforeLogin()
    {
        return manager.BeforeLogin();
    }

    /// <summary>
    /// This method gets called after BeforeLogin, but only if IsLoggedIn returned false.
    /// It can be used to actually login the user/enter wallet details in the faucet
    /// </summary>
    /// <returns></returns>
    public override int DoLogin()
    {
        return manager.DoLogin();
    }


    public override int GetFaucetWaitTime()
    {
        return manager.GetFaucetWaitTime();
    }

    public const string ShortUrl = "https://starbux.io/shortlinks.html";

    /// <summary>
    /// This method gets called after the BeforeSolveFaucet. You can do the actual claiming of the faucet in here.
    /// </summary>
    /// <returns></returns>
    public override int DoSolveFaucet()
    {
        if (Driver.Url != "https://starbux.io/")
        {
            GoToUrl("https://starbux.io/");
            Wait();
        }
        return manager.DoSolveFaucet();
    }
}
