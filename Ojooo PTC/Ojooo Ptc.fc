using FaucetCollector.Script;

using System;

public class WadOjoPtcgScript_ : FaucetScript
{

    public override FaucetSettings Settings
    {
        get
        {
            return new FaucetSettings("https://wad.ojooo.com")
            {
                new FaucetSetting(){Name="User",Display="Username",Type=EditorType.TextBox,Required=true},
                new FaucetSetting(){Name="Pass",Display="Password",Type=EditorType.Password,Required=true},
                new FaucetSetting(){Name="UseSolvemedia",Display="Use Solvemedia", Type=EditorType.CheckBox,Default=true},
                new FaucetSetting(){Name="NSites",Display="Nº Sites To Surf", Type=EditorType.TextBox,Default=30},
                new FaucetSetting(){Name="Wait",Display="Time To Wait(minutes)",Type=EditorType.TextBox,Default=60},

            };
        }
    }


    public override void Start()
    {
        //Title that shows in the browser. Is used to identify and close popup windows
        Title = "Ojooo";

        //After we did try to claim on the faucet we search for these elements to determine if it was a success or a fail
        SuccessXPath = "//div[@id='opis_timer']";
        FailXPath = "//a[@class='icon_account']//span[@class='icon_pic']";




        //Let Faucet Collector start up everything
        base.Start();
    }

    public override int DoInit()
    {
        Driver.Manage().Cookies.DeleteAllCookies();
        //Let Faucet Collector continue.
        return base.DoInit();
    }


    public override bool IsLoggedIn()
    {
        GoToUrl("http://wad.ojooo.com/ads.php");
        //In here we can check for the presence of an element that is only present when you are logged in.
        //In this case we check for en element with the class "loggedIn"
        return ElementByXPath("//a[contains(@href,'/logout.php')]") != null;
    }


    public override int DoLogin()
    {
        GoToUrl("https://wad.ojooo.com/login.php");
        if (!SetText_2XPath("//input[@id='login_username']", "/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[1]/form[1]/div[1]/input[1]", GetSetting("User")))
        {
            return Fail("Box to set user/email isn't visible");
        }
        Wait();
        if (!SetText_2XPath("//input[@id='pwd']", "/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[1]/form[1]/div[2]/input[1]", GetPassword("Pass")))
        {
            return Fail("Password Box isn't visible");
        }

        Wait();
        var result = DoSolveCaptcha();
        if (result > 0)
        {
            return Fail("Fail Solving captcha");
        }
        if (!Click_2XPath("//input[@name='Login2']", "/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[1]/form[1]/div[3]/div[1]/input[1]"))
        {
            return Fail("Fail to click Button login");
        }
        var error = ElementByXPath("//div[@class='error']");
        if (IsVisible(error))
        {
            Log(error.Text);
        }
        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.DoLogin();
    }
    private bool SetText_2XPath(string Relative_Xpath, string Absolute_XPath, string TextToset)
    {
        var ToSet = ElementByXPath(Relative_Xpath);
        if (!IsVisible(ToSet))
        {
            var ToSet_2 = ElementByXPath(Absolute_XPath);
            if (!IsVisible(ToSet_2))
            {
                return false;
            }
            else
            {
                SetText(ToSet_2, TextToset);
            }
        }
        else
        {
            SetText(ToSet, TextToset);
        }
        return true;

    }
    private bool Click_2XPath(string Relative_Xpath, string Absolute_XPath)
    {
        var ToClick = ElementByXPath(Relative_Xpath);
        if (!IsVisible(ToClick))
        {
            var ToClick2 = ElementByXPath(Absolute_XPath);
            if (!IsVisible(ToClick2))
            {
                return false;
            }
            else
            {
                Click(ToClick2);
            }
        }
        else
        {
            Click(ToClick);
        }
        return true;
    }


    public override int GetFaucetWaitTime()
    {
        GoToUrl("http://wad.ojooo.com/ads.php");
        var ads = ElementsByXPath("//a[contains(@href,'cks.')]//div[@class='tile  ']//span[@class='ad_id']");
        int n_ads = 0;

        n_ads = ads.Count;
        if (n_ads > 0)
        {
            return 0;
        }
        else
        {
            int tt;
            try
            {
                tt = Convert.ToInt32(GetSetting("Wait"));

            }
            catch (Exception)
            {
                tt = 3600;
            }
            return tt;
        }
    }


    public override int DoSolveCaptcha()
    {
        if (GetBoolSetting("UseSolvemedia"))
        {
            if (!IsVisible(ElementByXPath("//div[@id='adcopy-puzzle-image']")))
            {
                var switch_ = ElementByXPath("//a[@id='switchCaptcha']");
                if (IsVisible(switch_))
                {
                    Click(switch_);
                }
            }
        }
        else
        {
            if (IsVisible(ElementByXPath("//div[@id='adcopy-puzzle-image']")))
            {
                var switch_ = ElementByXPath("//a[@id='switchCaptcha']");
                if (IsVisible(switch_))
                {
                    Click(switch_);
                }
            }
        }

        //This faucet has nothing to do here. We will let Faucet Collector handle it.
        return base.DoSolveCaptcha();
    }


    public override int DoSolveFaucet()
    {
        GoToUrl("http://wad.ojooo.com/ads.php");
        var ads = ElementsByXPath("//a[contains(@href,'cks.')]//div[@class='tile  ']//span[@class='ad_id']");

        int n = 0;
        string base_url = "http://wad.ojooo.com/cks.php?k=";
        string final_url = "&cdk=false";
        string past_id = "FIRST ID";
        while (ads.Count > n)
        {
            try
            {
                string id = ExecuteScript("return arguments[0].innerHTML", ads[n]) as string;

                if (id != past_id)
                {
                    string total_url = base_url + id + final_url;
                    GoToUrl(total_url);

                    Wait(2, 3);

                    try
                    {
                        // We try to execute function to start timer
                        ExecuteScript("start_timer();");
                    }
                    catch (Exception)
                    {

                    }
                    var clock = ElementByXPath("//div[@id='clock']");
                    DateTime timeout = DateTime.Now.AddSeconds(40);
                    while (!IsVisible(clock))
                    {
                        Wait();
                        clock = ElementByXPath("//div[@id='clock']");

                    }

                    int timer;
                    if (!IsVisible(clock) || !int.TryParse(clock.Text, out timer))
                    {
                        timer = 35;
                    }

                    Wait(timer);

                    ExecuteScript("zalicz=true;remove_bar();");

                    Wait(1, 2);


                    if (!Driver.Url.Contains("http://wad.ojooo.com/ads.php"))
                    {
                        GoToUrl("http://wad.ojooo.com/ads.php");
                    }
                    else
                    {
                        Driver.Navigate().Refresh();
                    }
                    past_id = id;
                    Wait();
                    ads = ElementsByXPath("//a[contains(@href,'cks.')]//div[@class='tile  ']//span[@class='ad_id']");
                }
                else
                {
                    n++;
                    if (!Driver.Url.Contains("http://wad.ojooo.com/ads.php"))
                    {
                        GoToUrl("http://wad.ojooo.com/ads.php");
                    }
                    else
                    {
                        Driver.Navigate().Refresh();
                    }
                    Wait();
                    ads = ElementsByXPath("//a[contains(@href,'cks.')]//div[@class='tile  ']//span[@class='ad_id']");
                }
            }

            catch (Exception)
            {
                n++;
                CheckForPopupsEnabled = false;
                CheckForPopups();
                if (!Driver.Url.Contains("http://wad.ojooo.com/ads.php"))
                {
                    GoToUrl("http://wad.ojooo.com/ads.php");
                }
                else
                {
                    Driver.Navigate().Refresh();
                }
                Wait();
                ads = ElementsByXPath("//a[contains(@href,'cks.')]//div[@class='tile  ']//span[@class='ad_id']");
            }
        }
        return GetWaitSetting();


    }


}